name: AWS_CENTRIFY

provider {
    type: aws
    accessKeyId: ${?AWS_ACCESS_KEY_ID}
    secretAccessKey: ${?AWS_SECRET_ACCESS_KEY}
    region: YOURREGION
    subnetId: YOURSUBNET
    securityGroupsIds: YOURSECURITYGROUPS
    instanceNamePrefix: director
    rootVolumeSizeGB: 50
    rootVolumeType: gp2
    associatePublicIpAddresses: true
}

ssh {
    username: ec2-user
    privateKey: /home/ec2-user/.ssh/id_rsa
}

instances {
    m3x {
        type: m3.xlarge
        image: ami-0d28fe66 # RHEL 6.7

        tags {
            owner: "YOUROWNER"
        }

        bootstrapScriptPath: "/path/to/scripts/rhel6/bootstrap_ad.sh"
        normalizeInstance: true
    }

    m32x {
        type: m3.2xlarge
        image: ami-0d28fe66 # RHEL 6.7

        tags {
            owner: "YOUROWNER"
        }

        bootstrapScriptPath: "/path/to/scripts/rhel6/bootstrap_ad.sh"
        normalizeInstance: true
    }
}

cloudera-manager {
    instance: ${instances.m32x} {
        tags {
            application: "Cloudera Manager 5"
        }
    }

    repository: "http://archive.cloudera.com/cm5/redhat/6/x86_64/cm/5.7/"
    repositoryKeyUrl: "http://archive.cloudera.com/cm5/redhat/6/x86_64/cm/RPM-GPG-KEY-cloudera"
    enableEnterpriseTrial: true
    unlimitedJce: true
    krbAdminUsername: "prod_cm@CLOUDERA.LOCAL"
    krbAdminPassword: "Cloudera!"

    configs {
        CLOUDERA_MANAGER {
            custom_banner_html: "Managed by Cloudera Director"
            KDC_TYPE: "Active Directory"
            KDC_HOST: "cloudera.local"
            SECURITY_REALM: "CLOUDERA.LOCAL"
            KRB_MANAGE_KRB5_CONF: true
            KRB_ENC_TYPES: "aes256-cts aes128-cts rc4-hmac"
            AD_ACCOUNT_PREFIX: "cdh_"
            AD_KDC_DOMAIN: "ou=serviceaccounts,ou=prod,ou=clusters,ou=cloudera,dc=cloudera,dc=local"
        }
    
        CLOUDERA_MANAGEMENT_SERVICE {
            ssl_client_truststore_location: "/opt/cloudera/security/jks/truststore.jks"
            ssl_client_truststore_password: "Cloudera!"
        }
    
        SERVICEMONITOR {
            firehose_heapsize: 1073741824
            firehose_non_java_memory_bytes: 2147483648
        }

        HOSTMONITOR {
            firehose_heapsize: 1073741824
            firehose_non_java_memory_bytes: 2147483648
        }

        NAVIGATORMETASERVER {
            ssl_enabled: true
            ssl_server_keystore_location: "/opt/cloudera/security/jks/server.jks"
            ssl_server_keystore_password: "Cloudera!"
            ssl_server_keystore_keypassword: "Cloudera!"
            auth_backend_order: "CM_THEN_EXTERNAL"
            external_auth_type: "ACTIVE_DIRECTORY"
            nav_ldap_bind_dn: "prod_binduser"
            nav_ldap_bind_pw: "Cloudera!"
            nav_ldap_group_search_base: "ou=groups,ou=prod,ou=clusters,ou=cloudera,dc=cloudera,dc=local"
            nav_ldap_url: "ldaps://server1.cloudera.local"
            nav_ldap_user_search_base: "dc=cloudera,dc=local"
            nav_nt_domain: "CLOUDERA.LOCAL"
        }

        # REPORTSMANAGER { ... }
        # EVENTSERVER { ... }
        # ALERTPUBLISHER { ... }
        # NAVIGATOR { ... }
        # HOSTS { ... }
    }
}

cluster {
    products {
        CDH: 5
    }

    parcelRepositories: ["http://archive.cloudera.com/cdh5/parcels/5.7/"]

    services: [HDFS, YARN, ZOOKEEPER, HIVE, IMPALA, HUE, OOZIE, SPARK_ON_YARN, SENTRY]

    configs {
        HDFS {
            hdfs_hadoop_ssl_enabled: true
            hdfs_sentry_sync_enable: true
            dfs_namenode_acls_enabled: true
            hadoop_secure_web_ui: true
            hadoop_rpc_protection: "privacy"
            ssl_client_truststore_location: "/opt/cloudera/security/jks/truststore.jks"
            ssl_client_truststore_password: "Cloudera!"
            ssl_server_keystore_location: "/opt/cloudera/security/jks/server.jks"
            ssl_server_keystore_keypassword: "Cloudera!"
            ssl_server_keystore_password: "Cloudera!"
            hadoop_http_auth_cookie_domain: "CLOUDERA.LOCAL"
            hadoop_authorized_admin_groups: "prod_cdh_admins"
            hadoop_authorized_admin_users: "hdfs,yarn"
            hadoop_authorized_groups: "prod_cdh_users"
            hadoop_authorized_users: "hdfs,yarn,mapred,hive,impala,oozie,hue,zookeeper,sentry,spark,sqoop,kms,httpfs,hbase,sqoop2,flume,solr,kafka,llama"

        }

        YARN {
            hadoop_secure_web_ui: true
            ssl_server_keystore_location: "/opt/cloudera/security/jks/server.jks"
            ssl_server_keystore_keypassword: "Cloudera!"
            ssl_server_keystore_password: "Cloudera!"
            yarn_admin_acl: "yarn prod_cdh_admins"
        }

        IMPALA {
            client_services_ssl_enabled: true
            enable_ldap_auth: true
            impala_ldap_uri: "ldaps://server1.cloudera.local"
            ldap_domain: "CLOUDERA.LOCAL"
            ssl_private_key: "/opt/cloudera/security/x509/server.key"
            ssl_private_key_password: "Cloudera!"
            ssl_server_certificate: "/opt/cloudera/security/x509/server.pem"
            ssl_client_ca_certificate: "/opt/cloudera/security/x509/truststore.pem"
        }

        OOZIE {
            oozie_use_ssl: true
        }

        HUE {
            auth_backend: "desktop.auth.backend.LdapBackend"
            base_dn: "dc=cloudera,dc=local"
            bind_dn: "cn=prod_binduser,ou=users,ou=prod,ou=clusters,ou=cloudera,dc=cloudera,dc=local"
            bind_password: "Cloudera!"
            group_filter: "(&(objectClass=group)(|(sAMAccountName=prod_hue_admins)(sAMAccountName=prod_hue_users)))"
            ldap_cert: "/opt/cloudera/security/x509/truststore.pem"
            ldap_url: "ldaps://server1.cloudera.local"
            nt_domain: "CLOUDERA.LOCAL"
            search_bind_authentication: true
            use_start_tls: false
            user_filter: "(&(objectClass=user)(|(memberOf=cn=prod_hue_admins,ou=groups,ou=prod,ou=clusters,ou=cloudera,dc=cloudera,dc=local)(memberOf=cn=prod_hue_users,ou=groups,ou=prod,ou=clusters,ou=cloudera,dc=cloudera,dc=local)))"
        }

        HIVE {
            hiveserver2_enable_ssl:  true
            hiveserver2_keystore_path: "/opt/cloudera/security/jks/server.jks"
            hiveserver2_keystore_password: "Cloudera!"
            hiveserver2_truststore_file: "/opt/cloudera/security/jks/truststore.jks"
            hiveserver2_truststore_password: "Cloudera!"
        }

        SENTRY {
            sentry_service_admin_group: "hive,impala,hue,prod_sentry_admins"
        }
    }

    masters {
        count: 1

        instance: ${instances.m3x} {
            tags {
                group: master
            }
        }

        roles {
            HDFS: [NAMENODE, SECONDARYNAMENODE, BALANCER, HTTPFS]
            YARN: [RESOURCEMANAGER, JOBHISTORY]
            ZOOKEEPER: [SERVER]
            SPARK_ON_YARN: [GATEWAY, SPARK_YARN_HISTORY_SERVER]
            HIVE: [GATEWAY, HIVEMETASTORE]
            IMPALA: [STATESTORE, CATALOGSERVER]
            SENTRY: [SENTRY_SERVER]
        }

        configs {
            HDFS {
                HTTPFS {
                    httpfs_use_ssl: true
                    httpfs_https_keystore_file: "/opt/cloudera/security/jks/server.jks"
                    httpfs_https_keystore_password: "Cloudera!"
                    httpfs_https_truststore_file: "/opt/cloudera/security/jks/truststore.jks"
                    httpfs_https_truststore_password: "Cloudera!"
                }
            }

            ZOOKEEPER {
                SERVER {
                    dataDir: "/data1/zk"
                    dataLogDir: "/data1/zk"
                }
            }

            IMPALA {
                STATESTORE {
                    webserver_certificate_file: "/opt/cloudera/security/x509/server.pem"
                    webserver_private_key_file: "/opt/cloudera/security/x509/server.key"
                    webserver_private_key_password_cmd: "Cloudera!"
                    webserver_htpassword_user: "impala"
                    webserver_htpassword_password: "Cloudera!"
                }

                CATALOGSERVER {
                    webserver_certificate_file: "/opt/cloudera/security/x509/server.pem"
                    webserver_private_key_file: "/opt/cloudera/security/x509/server.key"
                    webserver_private_key_password_cmd: "Cloudera!"
                    webserver_htpassword_user: "impala"
                    webserver_htpassword_password: "Cloudera!"
                }
            }
        }
    }

    workers {
        count: 3
        minCount: 3

        instance: ${instances.m3x} {
            tags {
                group: worker
            }
        }

        roles {
            HDFS: [DATANODE]
            YARN: [NODEMANAGER]
            IMPALA: [IMPALAD]
            HIVE: [GATEWAY]
            SPARK_ON_YARN: [GATEWAY]
        }

        configs {
            IMPALA {
                IMPALAD {
                    disk_spill_encryption: true
                    webserver_certificate_file: "/opt/cloudera/security/x509/server.pem"
                    webserver_private_key_file: "/opt/cloudera/security/x509/server.key"
                    webserver_private_key_password_cmd: "Cloudera!"
                    webserver_htpassword_user: "impala"
                    webserver_htpassword_password: "Cloudera!"
                    impalad_ldap_ca_certificate: "/opt/cloudera/security/x509/truststore.pem"
                    impalad_memory_limit: 1073741824
                }
            }
        }
    }

    gateways {
        count: 1

        instance: ${instances.m3x} {
            tags {
                group: gateway
            }
        }

        roles {
            HIVE: [GATEWAY, HIVESERVER2]
            OOZIE: [OOZIE_SERVER]
            HUE: [HUE_SERVER]
            SPARK_ON_YARN: [GATEWAY]
            YARN: [GATEWAY]
            HDFS: [GATEWAY]
        }

        configs {
            OOZIE {
                OOZIE_SERVER {
                    oozie_https_keystore_file: "/opt/cloudera/security/jks/server.jks"
                    oozie_https_keystore_password: "Cloudera!"
                    oozie_https_truststore_file: "/opt/cloudera/security/jks/truststore.jks"
                    oozie_https_truststore_password: "Cloudera!"
                }
            }

            HUE {
                HUE_SERVER {
                    ssl_enable: true
                    ssl_certificate: "/opt/cloudera/security/x509/server.pem"
                    ssl_private_key: "/opt/cloudera/security/x509/server.key"
                    ssl_private_key_password: "Cloudera!"
                    ssl_cacerts: "/opt/cloudera/security/x509/truststore.pem"
                }
            }

            HIVE {
                HIVESERVER2 {
                    ssl_enabled: true
                    ssl_server_keystore_location: "/opt/cloudera/security/jks/server.jks"
                    ssl_server_keystore_password: "Cloudera!"
                }
            }
        }
    }

}
